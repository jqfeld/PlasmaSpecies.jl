var documenterSearchIndex = {"docs":
[{"location":"api/","page":"API","title":"API","text":"CurrentModule = PlasmaSpecies","category":"page"},{"location":"api/#Index","page":"API","title":"Index","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"","category":"page"},{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Modules = [PlasmaSpecies]","category":"page"},{"location":"api/#PlasmaSpecies.DiNitrogen","page":"API","title":"PlasmaSpecies.DiNitrogen","text":"DiNitrogen <: Gas\n\nMolecular nitrogen.  Registered label: N2\n\n\n\n\n\n","category":"type"},{"location":"api/#PlasmaSpecies.DiOxygen","page":"API","title":"PlasmaSpecies.DiOxygen","text":"DiOxygen <: Gas\n\nMolecular oxygen. Registered label: O2\n\n\n\n\n\n","category":"type"},{"location":"api/#PlasmaSpecies.Electron","page":"API","title":"PlasmaSpecies.Electron","text":"Electron <: Gas\n\nAtomic nitrogen.  Registered label: e\n\n\n\n\n\n","category":"type"},{"location":"api/#PlasmaSpecies.Nitrogen","page":"API","title":"PlasmaSpecies.Nitrogen","text":"Nitrogen <: Gas\n\nAtomic nitrogen.  Registered label: N\n\n\n\n\n\n","category":"type"},{"location":"api/#PlasmaSpecies.Oxygen","page":"API","title":"PlasmaSpecies.Oxygen","text":"Oxygen <: Gas\n\nAtomic oxygen. Registered label: O\n\n\n\n\n\n","category":"type"},{"location":"api/#PlasmaSpecies.Species","page":"API","title":"PlasmaSpecies.Species","text":"Species(\n    gas <: Gas, \n    charge=Neutral(),  \n    electronic_state=nothing, \n    vibrational_state=nothing, \n    rotational_state=nothing\n)\n\nFields\n\n\n\ngas <: Gas: Label of the parent gas, e.g. a struct like Nitrogen <: Gas or the general StringGas(str:String). \ncharge=Neutral(): Charge of the species, e.g. Neutral(), Positive(n), Negative(n)  \nelectronic_state=nothing: Optional, label for the electronic state.\nvibrational_state=nothing: Optional, label for the vibrational state. If defined, electronic_state cannot be nothing.\nrotational_state=nothing: Optional, label for the rotational state. If defined, vibrational_state cannot be nothing.\n\n\n\n\n\n","category":"type"},{"location":"api/#PlasmaSpecies.Species-Tuple{String}","page":"API","title":"PlasmaSpecies.Species","text":"Species(str::String)\n\nConvenience constructor for the Species struct.  It parses a string of the format defined by the LoKI-B  Boltzmann solver and automatically fills in the fields of Species.\n\n\n\n\n\n","category":"method"},{"location":"api/#PlasmaSpecies.TetraNitrogen","page":"API","title":"PlasmaSpecies.TetraNitrogen","text":"TetraNitrogen <: Gas\n\nTetra atomic nitrogen.   Registered label: N4\n\n\n\n\n\n","category":"type"},{"location":"api/#PlasmaSpecies.TetraOxygen","page":"API","title":"PlasmaSpecies.TetraOxygen","text":"TetraOxygen <: Gas\n\nTetra atomic oxygen. Registered label: O4\n\n\n\n\n\n","category":"type"},{"location":"api/#PlasmaSpecies.TriNitrogen","page":"API","title":"PlasmaSpecies.TriNitrogen","text":"TriNitrogen <: Gas\n\nTri atomic nitrogen.   Registered label: N3\n\n\n\n\n\n","category":"type"},{"location":"api/#PlasmaSpecies.TriOxygen","page":"API","title":"PlasmaSpecies.TriOxygen","text":"TriOxygen <: Gas\n\nTri atomic oxygen (ozone). Registered label: O3\n\n\n\n\n\n","category":"type"},{"location":"api/#PlasmaSpecies.apply_tree-Tuple{SpeciesTree, PlasmaReaction}","page":"API","title":"PlasmaSpecies.apply_tree","text":"```julia \napply_tree(t::SpeciesTree, reactions::PlasmaReaction)\n```\n\nApply the species tree to a reaction and return an array with tuples containing  the scaling factor and the new reaction.  This means for each participating species it is checked, if it is a leaf of the tree.  If not, a new reaction is created for each descendent species.  If the non-leaf species is a product, the branching factor is one over the number of  descendants (effectively assuming that the total reaction rate is distributed equally over all possible products).\n\n\n\n\n\n","category":"method"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = PlasmaSpecies","category":"page"},{"location":"#PlasmaSpecies","page":"Home","title":"PlasmaSpecies","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"PlasmaSpecies.jl implements some basic types for handling the various species in a plasma species.  Some of its features are:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Data structures to define species in the plasma (e.g., electrons, ions, and neutrals)\nMethods to construct a tree data structure which shows the relations between the various species.\nMethods to define reactions between the species and a way to produce the corresponding Catalyst.jl Reactions.\nSome convenience functionality, e.g., a string macro to define species (p\"e\" or p\"N2\") and reactions (p\"e + N2 --> 2e + N2(+)) using the notation introduced by the LoKI-B Boltzmann solver.","category":"page"},{"location":"reactions/","page":"Reactions","title":"Reactions","text":"CurrentModule = PlasmaSpecies","category":"page"},{"location":"reactions/#Reactions","page":"Reactions","title":"Reactions","text":"","category":"section"},{"location":"reactions/","page":"Reactions","title":"Reactions","text":"TODO","category":"page"},{"location":"species/","page":"Species","title":"Species","text":"CurrentModule = PlasmaSpecies","category":"page"},{"location":"species/#Species","page":"Species","title":"Species","text":"","category":"section"},{"location":"species/","page":"Species","title":"Species","text":"A Species is represented by the following struct","category":"page"},{"location":"species/","page":"Species","title":"Species","text":"Species","category":"page"},{"location":"species/#PlasmaSpecies.Species-species","page":"Species","title":"PlasmaSpecies.Species","text":"Species(\n    gas <: Gas, \n    charge=Neutral(),  \n    electronic_state=nothing, \n    vibrational_state=nothing, \n    rotational_state=nothing\n)\n\nFields\n\n\n\ngas <: Gas: Label of the parent gas, e.g. a struct like Nitrogen <: Gas or the general StringGas(str:String). \ncharge=Neutral(): Charge of the species, e.g. Neutral(), Positive(n), Negative(n)  \nelectronic_state=nothing: Optional, label for the electronic state.\nvibrational_state=nothing: Optional, label for the vibrational state. If defined, electronic_state cannot be nothing.\nrotational_state=nothing: Optional, label for the rotational state. If defined, vibrational_state cannot be nothing.\n\n\n\n\n\n","category":"type"},{"location":"species/","page":"Species","title":"Species","text":"Usually, it is more convenient to define the species by a string in the format given defined by LoKI-B.  For this purpose, PlasmaSpecies supplies a convenience constructor: ","category":"page"},{"location":"species/","page":"Species","title":"Species","text":"Species(::String)","category":"page"},{"location":"species/#PlasmaSpecies.Species-Tuple{String}-species","page":"Species","title":"PlasmaSpecies.Species","text":"Species(str::String)\n\nConvenience constructor for the Species struct.  It parses a string of the format defined by the LoKI-B  Boltzmann solver and automatically fills in the fields of Species.\n\n\n\n\n\n","category":"method"},{"location":"species/","page":"Species","title":"Species","text":"With this the definition of a species is as easy as","category":"page"},{"location":"species/","page":"Species","title":"Species","text":"using PlasmaSpecies\nSpecies(\"N2(X,v=0,J=10)\")","category":"page"},{"location":"species/","page":"Species","title":"Species","text":"A valid string consists of a label for the gas (N2) optionally more detailed information can be given in brackets separated by commas, starting with the charge as a variable number of + or - signs or a zero. If no charge is explicitly given the default (Neutral()) is used. The charge is followed by an optional label for the electronic state. The labels for the vibrational and rotational states are prefixed by v= or J=, respectively. Some valid examples are:","category":"page"},{"location":"species/","page":"Species","title":"Species","text":"using PlasmaSpecies\nSpecies(\"e\")\nSpecies(\"N3(+)\")\nSpecies(\"N2(+,B)\")\nSpecies(\"N2(-,X,v=2)\")\np\"N4(+)\"","category":"page"},{"location":"species/","page":"Species","title":"Species","text":"The last repl command uses the p\"...\" string macro which can be used to define species and reactions as well.","category":"page"},{"location":"species/#Methods","page":"Species","title":"Methods","text":"","category":"section"},{"location":"species/","page":"Species","title":"Species","text":"Various methods exist to query information from a Species object. These include methods to obtain the fields of the struct:","category":"page"},{"location":"species/","page":"Species","title":"Species","text":"using PlasmaSpecies\nsp = Species(\"N2(+,B)\")\ngas(sp)\ncharge(sp)\nelectronic_state(sp)\nvibrational_state(sp) === nothing\nrotational_state(sp) === nothing","category":"page"},{"location":"species/","page":"Species","title":"Species","text":"Further, the mass of a species (in kg) can be queried if its corresponding gas has the corresponding method defined.PlasmaSpecies contains a few registered gases which are automatically recognized in the species strings and have their masses defined. The masses of the missing or additional electrons corresponding to the charge of the species are accounted for. ","category":"page"},{"location":"species/","page":"Species","title":"Species","text":"mass(sp)\nmass(p\"e\")\nmass(p\"N2\")\nmass(p\"N2\") - mass(p\"e\") ≈ mass(sp)\nmass(p\"unknown_gas(+,X)\")\nstruct UnknownGas <: Gas end\nPlasmaSpecies.mass(::UnknownGas) = π * 1e-26\nmass(Species(UnknownGas()))\n","category":"page"}]
}
